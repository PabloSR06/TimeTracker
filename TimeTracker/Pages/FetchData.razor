@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using TimeTracker.Data
@using TimeTracker.Service;
@using TimeTracker.Models;
@inject MySqlService service
@inject LoginState _loginState;


@if (checkInTime.isOpen)
{
    <button @onclick="AddProjectTime">Add Time</button>
    if (checkInTime.time_table != null)
    {
        <div>
            <div>
                <a>Start: </a>
                <a>@checkInTime.time_table.start_time</a>
            </div>
            @if (checkInTime.clockHistories != null)
            {
                @foreach (var time in checkInTime.clockHistories)
                {
                    <br />
                    <div>
                        <div>
                            <a>Minutes: </a>
                            <a>@time.Minutes</a>
                        </div>
                        
                        @if (_loginState.projects.TryGetValue(@time.Project_id, out string? projectName))
                        {
                            <div>
                                <a>Project: </a>
                                <a>@projectName</a>
                            </div>
                            
                        }

                    </div>
                }
            }
            <div>
                @if (!checkInTime.time_table.isFinish)
                {
                    <button class="btn btn-primary" @onclick="ClockOut">Finish</button>
                }else{
                    <a>End: </a>
                    <a>@checkInTime.time_table.finish_time</a>
                }
            </div>
        </div>
    }
    else
    {
        <a>Algo no cuadra</a>
    }
}
else
{
    <button class="btn btn-primary" @onclick="ClockIn">Start</button>

}

@if (PopupVisible)
{
    <div>
        <AddTime Id="TimeClock_id" Status="OnPopUpChange" />
    </div>
}



@code {

    private bool PopupVisible { get; set; }

    private int TimeClock_id { get; set; }

    private CheckInTime checkInTime = new CheckInTime();

    ClockInModel clock_in = new ClockInModel()
        {
            user_id = 1,
            start_time = DateTime.Now.TimeOfDay,
            date = DateTime.Today

        };

    ClockOutModel clockOut = new ClockOutModel()
        {
            user_id = 1,
            finish_time = DateTime.Now.TimeOfDay,
            date = DateTime.Today

        };

    private async Task ClockIn()
    {
        checkInTime = service.ClockIn(clock_in).Result;
    }
    private async Task ClockOut()
    {
        checkInTime = service.ClockOut(clockOut).Result;
    }

    protected override async Task OnInitializedAsync()
    {
        checkInTime = service.GetClockIn(clock_in.user_id, DateTime.Today);
    }

    private async Task AddProjectTime()
    {
        if (checkInTime.time_table != null)
            TimeClock_id = checkInTime.time_table.Id;

        PopupVisible = true;
    }

    private void OnPopUpChange(bool inserted)
    {
        PopupVisible = inserted;
    }

}
