@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using TimeTracker.Data
@using TimeTracker.Service;
@using TimeTracker.Models;
@inject MySqlService service
@inject LoginState _loginState;
@inject TimeTracker.Models.ClockHistoryMin _clockHistory;


@if (checkInTime.isOpen)
{
    if (checkInTime.time_table != null)
    {
        <a>@checkInTime.time_table.start_time</a>
        if (!checkInTime.time_table.isFinish)
        {
            <button class="btn btn-primary" @onclick="ClockOut">Finish</button>
        }else{
            <br />
            <a>@checkInTime.time_table.finish_time</a>
        }
    }
    else
    {
        <a>Algo no cuadra</a>
    }
    <button @onclick="AddProjectTime">Add Time</button>


}
else
{
    <button class="btn btn-primary" @onclick="ClockIn">Start</button>
    
}

@if(PopupVisible){
    <AddTime />
}



@code {


    private bool PopupVisible { get; set; }



    private CheckInTime checkInTime = new CheckInTime();

    ClockInModel clock_in = new ClockInModel()
        {
            user_id = 1,
            start_time = DateTime.Now.TimeOfDay,
            date = DateTime.Today

        };

    ClockOutModel clockOut = new ClockOutModel()
    {
        user_id = 1,
        finish_time = DateTime.Now.TimeOfDay,
        date = DateTime.Today

    };

    private async Task ClockIn()
    {
        checkInTime = service.ClockIn(clock_in).Result;
    }
    private async Task ClockOut()
    {
        checkInTime = service.ClockOut(clockOut).Result;
    }

    protected override async Task OnInitializedAsync()
    {
        checkInTime = service.GetClockIn(clock_in.user_id, DateTime.Today);
    }

    private async Task AddProjectTime()
    {
        if(checkInTime.time_table != null)
            _clockHistory.TimeClock_id = checkInTime.time_table.Id;

        PopupVisible = true;
    }



}
