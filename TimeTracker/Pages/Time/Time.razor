@using TimeTracker.Data
@using TimeTracker.Pages.Time;
@using TimeTracker.Pages.Calendar;
@using TimeTracker.Service;
@using TimeTracker.Models;
@inject MySqlService service
@inject LoginState _loginState;


@if (!PopupVisible)
{
    <JointCalendar InputDate="Calendar"></JointCalendar>


    @if (CheckInTime.isOpen)
    {
        <button @onclick="AddProjectTime">Add Time</button>
        if (CheckInTime.time_table != null)
        {
            <div>
                <div>
                    <a>Start: </a>
                    <a>@CheckInTime.time_table.start_time</a>
                </div>
                @if (CheckInTime.clockHistories != null)
                {
                    @foreach (var time in CheckInTime.clockHistories)
                    {
                        <br />
                        <div>
                            <div>
                                <a>Minutes: </a>
                                <a>@time.Minutes</a>
                            </div>

                            @if (_loginState.projects.TryGetValue(@time.Project_id, out string? projectName))
                            {
                                <div>
                                    <a>Project: </a>
                                    <a>@projectName</a>
                                </div>
                            }
                        </div>
                    }
                }
                <div>
                    @if (!CheckInTime.time_table.isFinish)
                    {
                        <button class="btn btn-primary" @onclick="ClockOut">Finish</button>
                    }
                    else
                    {
                        <a>End: </a>
                        <a>@CheckInTime.time_table.finish_time</a>
                    }
                </div>
            </div>
        }
        else
        {
            <a>Algo no cuadra</a>
        }
    }
    else
    {
        <button class="btn btn-primary" @onclick="ClockIn">Start</button>
    }
}
else
{
    <div>
        <AddTime Id="TimeClock_id" Status="OnPopUpChange" />
    </div>
}



@code {

    private bool PopupVisible { get; set; }

    private int TimeClock_id { get; set; }

    private CheckInTime CheckInTime = new CheckInTime();

    private CalendarInput Calendar = new CalendarInput();

    private void ClockIn()
    {
        ClockInModel clock_in = new ClockInModel()
        {
            user_id = _loginState.userId,
            start_time = DateTime.Now.TimeOfDay,
            date = Calendar.ToDate()
        };

        CheckInTime = service.ClockIn(clock_in).Result;
    }
    private void ClockOut()
    {
        ClockOutModel clockOut = new ClockOutModel()
        {
            user_id = _loginState.userId,
            finish_time = DateTime.Now.TimeOfDay,
            date = Calendar.ToDate(),
        };
        CheckInTime = service.ClockOut(clockOut).Result;
    }

    protected override async Task OnInitializedAsync()
    {
        Calendar = new CalendarInput();

        CheckInTime = service.GetClockIn(_loginState.userId, Calendar.ToDate());
    }

    private void AddProjectTime()
    {
        if (CheckInTime.time_table != null)
            TimeClock_id = CheckInTime.time_table.Id;

        PopupVisible = true;
    }

    private void OnPopUpChange(bool inserted)
    {
        PopupVisible = inserted;
    }

    private void OnSelectedDay(Boolean date)
    {
        CheckInTime = service.GetClockIn(_loginState.userId, Calendar.ToDate());

    }

}
